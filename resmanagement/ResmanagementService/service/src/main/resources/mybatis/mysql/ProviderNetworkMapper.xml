<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.openo.nfvo.resmanagement.service.mapper.ProviderNetworkMapper" >
  <resultMap id="BaseResultMap" type="org.openo.nfvo.resmanagement.service.entity.ProviderNetworkEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="VIM_ID" property="vimId" jdbcType="VARCHAR" />
    <result column="VIM_NAME" property="vimName" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="VLAN" property="vlan" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, VIM_ID, VIM_NAME, NAME, VLAN, DESCRIPTION
  </sql>
  <select id="getProviderNetwork" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Colu	mn_List" />
    from providernetwork
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="getProviderNetworks" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from providernetwork
    <where>
      <if test="id != null">
		 AND ID = #{id,jdbcType=VARCHAR}
	  </if>
	  <if test="name != null">
		 AND NAME = #{name,jdbcType=VARCHAR}
	  </if>
	  <if test="vimId != null" >
        AND VIM_ID = #{vimId,jdbcType=VARCHAR} 
      </if>
    </where>
  </select>
  <delete id="deleteProviderNetwork" parameterType="java.lang.String" >
    delete from providernetwork
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteProviderNetworkByVimId" parameterType="java.lang.String" >
    delete from providernetwork
    where VIM_ID = #{vimId,jdbcType=VARCHAR}
  </delete>
  <insert id="addProviderNetwork" parameterType="org.openo.nfvo.resmanagement.service.entity.ProviderNetworkEntity" >
    insert into providernetwork (ID, VIM_ID, VIM_NAME, 
      NAME, VLAN, DESCRIPTION
      )
    values (#{id,jdbcType=VARCHAR}, #{vimId,jdbcType=VARCHAR}, #{vimName,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{vlan,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="addProviderNetworkSelective" parameterType="org.openo.nfvo.resmanagement.service.entity.ProviderNetworkEntity" >
    insert into providernetwork
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="vimId != null" >
        VIM_ID,
      </if>
      <if test="vimName != null" >
        VIM_NAME,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="vlan != null" >
        VLAN,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="vimId != null" >
        #{vimId,jdbcType=VARCHAR},
      </if>
      <if test="vimName != null" >
        #{vimName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="vlan != null" >
        #{vlan,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateProviderNetworkSelective" parameterType="org.openo.nfvo.resmanagement.service.entity.ProviderNetworkEntity" >
    update providernetwork
    <set >
      <if test="vimId != null" >
        VIM_ID = #{vimId,jdbcType=VARCHAR},
      </if>
      <if test="vimName != null" >
        VIM_NAME = #{vimName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="vlan != null" >
        VLAN = #{vlan,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateProviderNetwork" parameterType="org.openo.nfvo.resmanagement.service.entity.ProviderNetworkEntity" >
    update providernetwork
    set VIM_ID = #{vimId,jdbcType=VARCHAR},
      VIM_NAME = #{vimName,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      VLAN = #{vlan,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>